package com.furballwear.apps.pugrz.fragments;


import android.database.Cursor;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.LoaderManager;
import android.support.v4.content.Loader;
import android.support.v4.widget.SwipeRefreshLayout;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import com.android.volley.AuthFailureError;
import com.android.volley.NetworkError;
import com.android.volley.NoConnectionError;
import com.android.volley.ParseError;
import com.android.volley.ServerError;
import com.android.volley.TimeoutError;
import com.android.volley.VolleyError;
import com.furballwear.apps.pugrz.App;
import com.furballwear.apps.pugrz.R;
import com.furballwear.apps.pugrz.adapters.Adapterbg;
import com.furballwear.apps.pugrz.common.Games;
import com.furballwear.apps.pugrz.common.logger.Log;

import com.furballwear.apps.pugrz.extras.GameSorter;
import com.furballwear.apps.pugrz.extras.GamesListener;
import com.furballwear.apps.pugrz.extras.SortListener;
import com.furballwear.apps.pugrz.extras.TaskLoadMoviesBoxOffice;
import com.furballwear.apps.pugrz.models.Game;
import com.furballwear.apps.pugrz.models.GameTask;

import java.util.ArrayList;


/**
 * A simple {@link Fragment} subclass.
 * Use the {@link FragmentBoxOffice#newInstance} factory method to
 * create an instance of this fragment.
 */
public class BoardGameFragment extends Fragment implements SortListener, BoxOfficeMoviesLoadedListener, SwipeRefreshLayout.OnRefreshListener,LoaderManager.LoaderCallbacks<Cursor>,Adapterbg.ClickListner{

    //The key used to store arraylist of movie objects to and from parcelable
    private static final String STATE_MOVIES = "state_movies";
    //the arraylist containing our list of box office his
    private ArrayList<Game> mListGames = new ArrayList<>();
    //the adapter responsible for displaying our movies within a RecyclerView
    private Adapterbg mAdapter;

    private SwipeRefreshLayout mSwipeRefreshLayout;
    //the recyclerview containing showing all our movies
    private RecyclerView recyclerViewbg;
    //the TextView containing error messages generated by Volley
    private TextView mTextError;
    //the sorter responsible for sorting our movie results based on choice made by the user in the FAB
    private GameSorter mSorter = new GameSorter();

    public BoardGameFragment() {
        // Required empty public constructor
    }

    /**
     * Use this factory method to create a new instance of
     * this fragment using the provided parameters.
     *
     * @param param1 Parameter 1.
     * @param param2 Parameter 2.
     * @return A new instance of fragment FragmentBoxOffice.
     */
    // TODO: Rename and change types and number of parameters
    public static FragmentBoxOffice newInstance(String param1, String param2) {
        FragmentBoxOffice fragment = new FragmentBoxOffice();
        Bundle args = new Bundle();
        //put any extra arguments that you may want to supply to this fragment
        fragment.setArguments(args);
        return fragment;
    }

    public void onGamesLoaded() {

    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment
        View layout = inflater.inflate(R.layout.fragment_board_game, container, false);
        mTextError = (TextView) layout.findViewById(R.id.bgtv);
        mSwipeRefreshLayout = (SwipeRefreshLayout) layout.findViewById(R.id.swipeMovieHits);
        mSwipeRefreshLayout.setOnRefreshListener(this);
        recyclerViewbg = (RecyclerView) layout.findViewById(R.id.bgrv);
        //set the layout manager before trying to display data
        recyclerViewbg.setLayoutManager(new LinearLayoutManager(getActivity()));
        mAdapter = new Adapterbg(getActivity());
        mAdapter.setClickListner(this);
        recyclerViewbg.setAdapter(mAdapter);

        if (savedInstanceState != null) {
            //if this fragment starts after a rotation or configuration change, load the existing movies from a parcelable
            mListGames = savedInstanceState.getParcelableArrayList(STATE_MOVIES);
        } else {
            getLoaderManager().initLoader(0, null, this);
            //if this fragment starts for the first time, load the list of movies from a database
            // mListGames = App.getWritableDatabase().readGames(DBGames.BOX_OFFICE);
            //if the database is empty, trigger an AsycnTask to download movie list from the web
            if (mListGames.isEmpty()) {
                Log.m("FragmentBoxOffice: executing task from fragment");

                new TaskLoadMoviesBoxOffice(this).execute();

            }
        }
        //update your Adapter to containg the retrieved movies
        mAdapter.setGames(mListGames);
        return layout;
    }


    @Override
    public void onSaveInstanceState(Bundle outState) {
        super.onSaveInstanceState(outState);
        //save the movie list to a parcelable prior to rotation or configuration change
        outState.putParcelableArrayList(STATE_MOVIES, mListGames);
    }


    private void handleVolleyError(VolleyError error) {
        //if any error occurs in the network operations, show the TextView that contains the error message
        mTextError.setVisibility(View.VISIBLE);
        if (error instanceof TimeoutError || error instanceof NoConnectionError) {
            mTextError.setText(R.string.error_timeout);

        } else if (error instanceof AuthFailureError) {
            mTextError.setText(R.string.error_auth_failure);
            //TODO
        } else if (error instanceof ServerError) {
            mTextError.setText(R.string.error_auth_failure);
            //TODO
        } else if (error instanceof NetworkError) {
            mTextError.setText(R.string.error_network);
            //TODO
        } else if (error instanceof ParseError) {
            mTextError.setText(R.string.error_parser);
            //TODO
        }
    }

    /**
     * Called when the user chooses to sort results by name through the menu displayed inside FAB
     */
    @Override
    public void onSortByName() {
        mSorter.sortMoviesByName(mListGames);
        mAdapter.notifyDataSetChanged();
    }

    /**
     * Called when the user chooses to sort results by date through the menu displayed inside FAB
     */
    @Override
    public void onSortByDate() {
        mSorter.sortMoviesByDate(mListGames);
        mAdapter.notifyDataSetChanged();
    }

    /**
     * Called when the user chooses to sort results by rating through the menu displayed inside FAB
     */
    @Override
    public void onSortByRating() {
        mSorter.sortMoviesByRating(mListGames);
        mAdapter.notifyDataSetChanged();
    }

    /**
     * Called when the AsyncTask finishes load the list of movies from the web
     */
    // @Override
    public void onBoxOfficeMoviesLoaded(ArrayList<Game> listGames) {
        Log.m("FragmentBoxOffice: onBoxOfficeMoviesLoaded Fragment");
        //update the Adapter to contain the new movies downloaded from the web
        if (mSwipeRefreshLayout.isRefreshing()) {
            mSwipeRefreshLayout.setRefreshing(false);
        }
        mAdapter.setGames(listGames);
    }

    @Override
    public void onRefresh() {
        Log.t(getActivity(), "onRefresh");
        //load the whole feed again on refresh, dont try this at home :)
        new TaskLoadMoviesBoxOffice(this).execute();

    }



    @Override
    public Loader<Cursor> onCreateLoader(int id, Bundle args) {
        return null;
    }

    @Override
    public void onLoadFinished(Loader<Cursor> loader, Cursor data) {

    }

    @Override
    public void onLoaderReset(Loader<Cursor> loader) {

    }

    @Override
    public void itemclicked(View view, int position) {

    }
}
